# Define your custom views here or overwrite the default views. Default
# CRUD operations are generated by the ringo frameworkd.
import logging
import transaction
from pyramid.httpexceptions import HTTPFound
from ringo.lib.helpers import get_action_routename, get_item_modul
from ringo.views.request import (
    handle_params,
    handle_history,
    get_item_from_request
)

from ringo.views.base import (
    set_web_action_view
)

log = logging.getLogger(__name__)


def trash(request):
    clazz = request.context.__model__
    _ = request.translate
    handle_params(request)
    handle_history(request)
    item = get_item_from_request(request)
    item_label = get_item_modul(request, clazz).get_label(plural=True)
    mapping = {'item_type': item_label, 'item': item}
    item.trash_state_id = 2
    route_name = get_action_routename(item, 'read')
    url = request.route_path(route_name, id=item.id)

    msg = _('Moved ${item} into trash successfully.', mapping=mapping)
    log_msg = u'User {user.login} trashed {item_label} {item.id}'.format(item_label=item_label, item=item, user=request.user)
    log.info(log_msg)
    request.session.flash(msg, 'success')

    transaction.commit()
    return HTTPFound(location=url)


def restore(request):
    clazz = request.context.__model__
    _ = request.translate
    handle_params(request)
    handle_history(request)
    item = get_item_from_request(request)
    item_label = get_item_modul(request, clazz).get_label(plural=True)
    mapping = {'item_type': item_label, 'item': item}
    item.trash_state_id = 1
    route_name = get_action_routename(item, 'update')
    url = request.route_path(route_name, id=item.id)

    msg = _('Restored ${item} from trash successfully.', mapping=mapping)
    log_msg = u'User {user.login} restored {item_label} {item.id}'.format(item_label=item_label, item=item, user=request.user)
    log.info(log_msg)
    request.session.flash(msg, 'success')

    transaction.commit()
    return HTTPFound(location=url)

set_web_action_view("trash", trash)
set_web_action_view("restore", restore)
